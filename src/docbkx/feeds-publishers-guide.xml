<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash "&#x2013;">
        <!ENTITY mdash "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">
]>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="feeds-pubguide"
    version="5.0-extension RaxBook-2.0" security="internal">
    <?rax title.font.size="35px" subtitle.font.size="20px"?>
    <title>Cloud Feeds Publishers Guide</title>
    <?rax status.bar.text.font.size="40px"
          status.bar.text="Early Availability"?>
    <chapter xml:id="Cloud_Feeds_Overview">
        <title>Defining and publishing events</title>
        <para>Cloud Feeds supports the publication of <emphasis role="italic">events</emphasis> that
            are collected in a <emphasis role="italic">feed</emphasis>. Events have a specific
            format, and you can have multiple types of events in a single feed.</para>
        <para>Cloud Feeds uses AtomPub to publish different types of feeds. AtomPub is based on an
            HTTP transfer of Atom-formatted representations. The Atom format is documented in the
            Atom Syndication Format.</para>
        <para>Cloud Feeds events must be defined using the Common Event Format (CEF). The Usage
            Measurement Service (UMS) utilizes CEF for tracking purposes, but CEF can be also used
            for other events and by third-party event publishers. CEF supports versioning of the
            event and product nodes through the <emphasis role="italic">version</emphasis>
            attribute, which enables products to release new versions of their schema.</para>
        <para>To read the official documentation for the Atom Syndication Format, see <link
                xlink:href="http://tools.ietf.org/search/rfc4287#section-4.1">RFC 4287</link>. For
            more information about AtomPub, visit <link xlink:href="http://atompub.org/"
                >http://atompub.org/</link>.</para>
        <section xml:id="Event_Types">
            <title>Event categories</title>
            <para>Cloud Feeds supports the following event categories. </para>
            <para><itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">Usage events</emphasis> record information about
                            how much a resource is being used over a specified time period. For
                            example, how much bandwidth, disk space or CPU cycles are being
                            used.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">System events</emphasis> are published to notify
                            subscribers about changes in their environments - a server has been
                            provisioned, an IP address has been released, there is an error state in
                            a VM, and so on. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">User access events</emphasis> are generated when
                            a user attempts to access a specific API (for example, if a user
                            requests that a server be shut down). </para>
                    </listitem>
                </itemizedlist>These events are highly useful for troubleshooting and for compliance
                auditing.</para>
        </section>
        <section xml:id="Event_format">
            <title>Feed format</title>
            <para>Currently, Cloud Feeds supports feeds in XML format. The feeds and events follow
                the <link xlink:href="http://tools.ietf.org/html/rfc4287">Atom Syndication
                    Format</link> and the API adheres to the <link
                    xlink:href="http://tools.ietf.org/html/rfc5023">Atom Publication
                Protocol</link>. A feed has the following structure.</para>
            <example>
                <title>Feed structure example</title>
                <programlisting language="xml" security="internal"><xi:include href="./samples/feed_structure.xml" parse="text"/></programlisting>
            </example>
            <para>The following table describes each element in a feed.</para>
            <para>
                <table frame="border">
                    <caption>Feed elements</caption>
                    <col width="30%"/>
                    <col width="70%"/>
                    <thead>
                        <tr>
                            <th>Element</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>event</code></td>
                            <td>Generated by the publisher. This element contains information about
                                the event that is <emphasis role="italic">not</emphasis>
                                product-specific, such as the time and duration of the event and
                                where the event occured.</td>
                        </tr>
                        <tr>
                            <td><code>feed</code></td>
                            <td>Generated by Cloud Feeds. This element is present only when the feed
                                engine reading the feeds. This element includes information about
                                the feed, such as how to navigate to the next "page" of events.</td>
                        </tr>
                        <tr>
                            <td><code>product</code></td>
                            <td>Generated by the publisher. This element contains product-specific
                                information about the event, such as the server type, IP address,
                                and state.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
        </section>
    </chapter>
    <chapter xml:id="Element_of_an_atom_entry">
        <title>Event node</title>
        <para>The <emphasis role="italic">event node</emphasis> is the main element of a Cloud Feeds
            usage event entry.</para>
        <para>The Event node contains the following elements:</para>
        <para>
            <itemizedlist>
                <listitem>
                    <para>Event node attributes (predefined)</para>
                </listitem>
                <listitem>
                    <para>Product node</para>
                </listitem>
            </itemizedlist>
        </para>
        <para>Following is an example of an event node.</para>
        <para>
            <programlisting>&lt;event 
      <emphasis role="bold">startTime</emphasis>="2014-07-14T22:19:52Z"
      <emphasis role="bold">endTime</emphasis>="2014-07-14T24:00:00Z" 
      <emphasis role="bold">region</emphasis>="DFW" <emphasis role="bold">dataCenter</emphasis>="DFW1" <emphasis role="bold">type</emphasis>="USAGE"
      <emphasis role="bold">id</emphasis>="8d89673c-c989-11e1-895a-0b3d632a8a89"
      <emphasis role="bold">resourceId</emphasis>="3863d42a-ec9a-11e1-8e12-df8baa3ca440"
      <emphasis role="bold">tenantId</emphasis>="1234" <emphasis role="bold">version</emphasis>="2">
        &lt;cb-store:<emphasis role="bold">product version</emphasis>="1" <emphasis role="bold">serviceCode</emphasis>="CloudBackup"
           <emphasis role="bold">serverID</emphasis>="9445"
           <emphasis role="bold">storage</emphasis>="99992827882" <emphasis role="bold">resourceType</emphasis>="AGENT"/>
&lt;/event></programlisting>
        </para>
        <section xml:id="Event_node">
            <title>Event node attributes<?sbr?></title>
            <para>The attributes in the event node are predefined and cannot be changed. The event
                node consists of the following attributes.</para>
            <para>
                <table frame="border">
                    <caption>Attributes in event node</caption>
                    <col width="20%"/>
                    <col width="20%"/>
                    <col width="40%"/>
                    <col width="20%"/>
                    <thead>
                        <tr>
                            <th>Attributes</th>
                            <th>Type</th>
                            <th>Description</th>
                            <th>Condition</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>agentUsername</code></td>
                            <td>event:Username</td>
                            <td>Specifies the Rackspace agent who is taking action on behalf of the
                                user.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>clientUsername</code></td>
                            <td>event:Username</td>
                            <td>Specifies the user name for the sub-account, when applicable.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>dataCenter</code></td>
                            <td>event:DC</td>
                            <td>Specifies the data center of the event. If this attribute is not
                                specified, <emphasis role="bold">GLOBAL</emphasis> will be assumed.
                                    <emphasis role="bold">GLOBAL</emphasis> implies that the
                                resource is without an assigned data center. For a list of possible
                                values, see <link linkend="Event_node_attributes">Event node
                                    attributes</link>.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional.</para>
                                    </listitem>
                                    <listitem>
                                        <para>For most cases, this attribute must be defined and
                                            cannot default to <emphasis role="bold"
                                                >GLOBAL</emphasis>.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>endTime</code></td>
                            <td>event:UTCDateTime</td>
                            <td>Specifies the time that the event ends. The format must be ISO 8601
                                format: <emphasis role="italic">yyyy-mm-ddThh:mm:ss.SSSZ</emphasis>
                                (Z designates UTC). For an event of type <emphasis role="bold"
                                    >EXIST</emphasis>, the <code>startTime</code> and
                                    <code>endTime</code> reflect the event duration for the resource
                                instance. The end time is exclusive that is, the event occurred up
                                to, but not during the specified value. The end time must occur
                                after the start time.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional. </para>
                                    </listitem>
                                    <listitem>
                                        <para>This attribute is required for events of type
                                                <emphasis role="bold">USAGE</emphasis>.</para>
                                    </listitem>
                                    <listitem>
                                        <para> The <code>startTime</code> attribute must also be
                                            specified.</para>
                                    </listitem>
                                    <listitem>
                                        <para> The event cannot span 24 hours.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>environment</code></td>
                            <td>event:ENVIRONMENT</td>
                            <td>Specifies the environment from which the message originated. If this
                                attribute is not specified, <emphasis role="bold">PROD</emphasis> is
                                assumed. For a list of possible values, see <link
                                    linkend="Event_node_attributes"><emphasis role="bold">Event node
                                        attributes</emphasis></link>.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>eventTime</code></td>
                            <td>event:UTCDateTime</td>
                            <td>Specifies the time of the event, using ISO 8601 format and UTC. Use
                                this attribute instead of <code>startTime</code> and
                                    <code>endTime</code> in cases where the event does not have a
                                range.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional. </para>
                                    </listitem>
                                    <listitem>
                                        <para>This attribute cannot coexist with the
                                                <code>startTime</code> or <code>endTime</code>
                                            attribute.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>id</code></td>
                            <td>event:UUID</td>
                            <td>Specifies the UUID for the event record. This value should be UUID
                                version 1, 2, or 4. For more information, see RFC 4122 at: <link
                                    xlink:href="http://tools.ietf.org/html/rfc4122"
                                    >http://tools.ietf.org/html/rfc4122</link>. </td>
                            <td>This attribute is required.</td>
                        </tr>
                        <tr>
                            <td><code>referenceId</code></td>
                            <td>event:UUID</td>
                            <td>Specifies a GUID that identifies the event record that this record
                                is updating. This attribute should be used if this event is
                                correcting another event.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>region</code></td>
                            <td>event:Region</td>
                            <td>Specifies the region in which the event is located. If this
                                attribute is not specified, <emphasis role="bold">GLOBAL</emphasis>
                                is assumed. <emphasis role="bold">GLOBAL</emphasis> implies that the
                                resource is without an assigned region. For a list of possible
                                values, see <link linkend="Event_node_attributes"><emphasis
                                        role="bold">Event node attributes</emphasis></link>.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>resourceId</code></td>
                            <td>event:NonEmptyString</td>
                            <td>Specifies the ID of the resource.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional. </para>
                                    </listitem>
                                    <listitem>
                                        <para>This attribute is required if the
                                                <code>resourceType</code> attribute is specified in
                                            the product node.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>resourceName</code></td>
                            <td>event:NonEmptyString</td>
                            <td>Specifies the customer-defined name of the resource.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>resourceURI</code></td>
                            <td>xsd:anyURI</td>
                            <td>Specifies a URI that uniquely identifies the resource.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>rootAction</code></td>
                            <td>event:NonEmptyString</td>
                            <td>Specifies the action that caused the event.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>severity</code></td>
                            <td>event:Severity</td>
                            <td>Specifies the severity of the event. Valid values are <emphasis
                                    role="bold">INFO</emphasis>, <emphasis role="bold"
                                    >WARNING</emphasis>, and <emphasis role="bold"
                                    >CRITICAL</emphasis>. This is attribute is valid only for system
                                events, not usage events.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>startTime</code></td>
                            <td>event:UTCDateTime</td>
                            <td>Specifies the time that the event starts. The format must be ISO
                                8601 format:<emphasis role="italic">
                                    yyyy-mm-ddThh:mm:ss.SSSZ</emphasis> (Z designates UTC). The
                                start time is inclusive, which means that the event occurred
                                starting at the start time, not after.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional. </para>
                                    </listitem>
                                    <listitem>
                                        <para>This attribute is required for events of type
                                                <emphasis role="bold">USAGE</emphasis>.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>tenantId</code></td>
                            <td>event:NonEmptyString</td>
                            <td>Specifies the tenant ID of the publishers.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>type</code></td>
                            <td>event:EventType</td>
                            <td>Specifies the type of event. If one of the existing event types
                                fails to produce any feeds, set this type to <emphasis role="bold"
                                    >EXTENDED</emphasis> and add an <code>eventType</code> attribute
                                to your product schema. For more information, see <link
                                    linkend="Event_types"><emphasis role="bold">Event
                                        types</emphasis></link>.</td>
                            <td>This attribute is required.</td>
                        </tr>
                        <tr>
                            <td><code>version</code></td>
                            <td>event:NonEmptyString</td>
                            <td>Specifies the version of the event record.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is required. </para>
                                    </listitem>
                                    <listitem>
                                        <para>If this attribute is set to 2, the event cannot span
                                            beyond midnight as defined in the <code>startTime</code>
                                            and <code>endTime</code> attributes.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <section xml:id="Event_node_attributes">
                <title>Attribute values for event node</title>
                <para>The following table lists the possible values for the <code>dataCenter</code>,
                        <code>environment</code>, and <code>region</code> attributes.</para>
                <para>
                    <table frame="border">
                        <caption>Attribute values</caption>
                        <col width="33%"/>
                        <col width="33%"/>
                        <col width="33%"/>
                        <thead>
                            <tr>
                                <th>dataCenter attribute</th>
                                <th>environment attribute</th>
                                <th>region attribute</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>GLOBAL</td>
                                <td>PROD</td>
                                <td>GLOBAL</td>
                            </tr>
                            <tr>
                                <td>DFW1</td>
                                <td>PREPROD</td>
                                <td>DFW</td>
                            </tr>
                            <tr>
                                <td>DFW2</td>
                                <td>STAGE</td>
                                <td>HKG</td>
                            </tr>
                            <tr>
                                <td>DFW3</td>
                                <td>QA</td>
                                <td>IAD</td>
                            </tr>
                            <tr>
                                <td>HKG1</td>
                                <td>UAT</td>
                                <td>LON</td>
                            </tr>
                            <tr>
                                <td>IAD1</td>
                                <td>LOCAL</td>
                                <td>ORD</td>
                            </tr>
                            <tr>
                                <td>IAD2</td>
                                <td/>
                                <td>SYD</td>
                            </tr>
                            <tr>
                                <td>IAD2</td>
                                <td/>
                                <td/>
                            </tr>
                            <tr>
                                <td>LON1</td>
                                <td/>
                                <td/>
                            </tr>
                            <tr>
                                <td>LOND3</td>
                                <td/>
                                <td/>
                            </tr>
                            <tr>
                                <td>ORD1</td>
                                <td/>
                                <td/>
                            </tr>
                            <tr>
                                <td>SYD3</td>
                                <td/>
                                <td/>
                            </tr>
                        </tbody>
                    </table>
                </para>
            </section>
            <section xml:id="Event_types">
                <title>Event types</title>
                <para>Cloud Feeds supports different event types that are specified in the event
                    node under the <code>type</code> attribute.</para>
                <para>Each event type has different conditions and requirements. </para>
                <para>The following table describes the most important event types.</para>
                <para>
                    <table frame="border">
                        <caption>Event types</caption>
                        <col width="25%"/>
                        <col width="35%"/>
                        <col width="40%"/>
                        <thead>
                            <tr>
                                <th>Type</th>
                                <th>Description</th>
                                <th>Requirements</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><emphasis role="bold">CREATE</emphasis></td>
                                <td>Specifies an event that creates a resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">DELETE</emphasis></td>
                                <td>Specifies an event that deletes a resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">DOWN</emphasis></td>
                                <td>Specifies an event that announces that a resource is down.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">EXTENDED</emphasis></td>
                                <td>Specifies a product-defined event type.</td>
                                <td>If the event type attribute is <emphasis role="bold"
                                        >EXTENDED</emphasis>, the product attributes should contain
                                    an <code>eventType</code> attribute, which will contain the
                                    actual event type.</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">INFO</emphasis></td>
                                <td>Specifies an information event related to a specific
                                    resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">SUSPEND</emphasis></td>
                                <td>Specifies an event that suspends a resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">UNSUSPEND</emphasis></td>
                                <td>Specifies an event that unsuspends a resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">UP</emphasis></td>
                                <td>Specifies an event that announces that a resource is up.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">UPDATE</emphasis></td>
                                <td>Specifies an event that updates a resource.</td>
                                <td>None</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">USAGE</emphasis></td>
                                <td>Specifies a usage event. This is the default type value.</td>
                                <td>See <link linkend="USAGE_event_type_requirements"><emphasis
                                            role="bold">Requirements for USAGE event
                                        type</emphasis></link>.</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">USAGE_SNAPSHOT</emphasis></td>
                                <td>Specifies an instantaneous usage event.</td>
                                <td>See <link linkend="USAGE_SNAPSHOT_event_type_requirements"
                                            ><emphasis role="bold">Requirements for USAGE_SNAPSHOT
                                            event type</emphasis></link>.</td>
                            </tr>
                            <tr>
                                <td><emphasis role="bold">USAGE_SUMMARY</emphasis></td>
                                <td>Automatically generated for any event of type <emphasis
                                        role="bold">USAGE</emphasis> and <emphasis role="bold"
                                        >USAGE_SNAPSHOT</emphasis>.</td>
                                <td>See <link linkend="USAGE_SUMMARY_event_type_requirements"
                                            ><emphasis role="bold">Requirements for USAGE_SUMMARY
                                            event type</emphasis></link>.</td>
                            </tr>
                        </tbody>
                    </table>
                </para>
                <section xml:id="USAGE_event_type_requirements">
                    <title> Requirements for USAGE event type</title>
                    <para>
                        <itemizedlist>
                            <listitem>
                                <para>Must contain the <code>tenantId</code> attribute</para>
                            </listitem>
                            <listitem>
                                <para>Must have the <code>startTime</code> and <code>endTime</code>
                                    attributes defined</para>
                            </listitem>
                            <listitem>
                                <para>Cannot have a <code>severity</code> attribute defined</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </section>
                <section xml:id="USAGE_SNAPSHOT_event_type_requirements">
                    <title> Requirements for USAGE SNAPSHOT event type</title>
                    <para>
                        <itemizedlist>
                            <listitem>
                                <para>Must contain the <code>tenantId</code> attribute</para>
                            </listitem>
                            <listitem>
                                <para>Must have the <code>eventTime</code> attribute defined</para>
                            </listitem>
                            <listitem>
                                <para>Cannot have a <code>severity</code> attribute defined</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </section>
                <section xml:id="USAGE_SUMMARY_event_type_requirements">
                    <title> Requirements for USAGE SUMMARY event type</title>
                    <para>
                        <itemizedlist>
                            <listitem>
                                <para>Must contain the <code>tenantId</code> attribute</para>
                            </listitem>
                            <listitem>
                                <para>Cannot have a <code>severity</code> attribute defined</para>
                            </listitem>
                            <listitem>
                                <para>The product node requires a summary attribute set to
                                    true</para>
                            </listitem>
                        </itemizedlist>
                    </para>
                </section>
            </section>
        </section>
    </chapter>
    <chapter xml:id="Product_node">
        <title>Product node</title>
        <para>The product node is located inside of an event node. The product node is custom and
            differs for every product. It provides product-specific information and details about
            the resources. Product nodes are defined by using a sample product schema. </para>
        <para>Following is an example of a product node:</para>
        <para>
            <programlisting>&lt;sample:product serviceCode="EmailAppsMSService"
       version="1"
       key="(domain=5002_domain_2.com)|(service=5002_domain_2.com)"
       productType="lync"
       operation="UPDATE"
       status="COMPLETED"
       request="HTTP GET"
       response="200">
       &lt;sample:dependent 
          key="(domain=1002_domain_200.com)|(service=1002_domain_100.com)"/>
       &lt;sample:dependent 
          key="(domain=2002_domain_200.com)|(service=2002_domain_200.com)"/>
&lt;/sample:product></programlisting>
        </para>
        <section xml:id="product_schema_node">
            <title>Product schema node</title>
            <para>The Product Schema is a proprietary, simplifed schema format which defines the
                product node for an event using XML. This allows someone to define a product event
                without having to know the XML Schema format.</para>
            <para>During the build process, the product schema file is transformed into an actual
                XML Schema file, which is then integrated with Cloud Feeds and validates events when
                they are posted.</para>
            <para>The product schema format has the following features:</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Product schemas can be versioned and multiple versions co-exist on a
                            feed. This allows products to extend their initial format.</para>
                    </listitem>
                    <listitem>
                        <para>Product nodes can support attributes of several different types, such
                            as string, dates, numeric types, and lists values.</para>
                    </listitem>
                    <listitem>
                        <para>Product nodes can support attribute groups, which allows related
                            attributes to be collected into a single node. Several instances of an
                            attribute group may exist in a single product node, giving users the
                            ability to create maps of object types.</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>For more information on how to create the final product schema file, see <link
                    linkend="Define_product_schema"><emphasis role="bold">Definining your product
                        schema</emphasis></link>.</para>
            <para>The following table lists the required attributes for the product schema
                node.</para>
            <para>
                <table frame="border">
                    <caption>Product schema node</caption>
                    <col width="20%"/>
                    <col width="20%"/>
                    <col width="30%"/>
                    <col width="30%"/>
                    <thead>
                        <tr>
                            <th>Attribute</th>
                            <th>Type</th>
                            <th>Description</th>
                            <th>Condition</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>aggregationPeriods</code></td>
                            <td>xsd:dayTimeDuration</td>
                            <td>Specifies a duration of one of the aggregation periods.  </td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is required for event types of type
                                                <emphasis role="bold">USAGE</emphasis>.</para>
                                    </listitem>
                                    <listitem>
                                        <para>The list of time periods specified in
                                                <code>aggregationPeriods</code> must sum to exactly
                                            24 hours.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>groupByResource</code></td>
                            <td>xsd:boolean</td>
                            <td>If this attribute is set to true, the attributes are grouped by the
                                resource ID. This group implies that the product is being charged
                                per resource. If this attribute is set to false, attributes are
                                grouped by the tenant ID. This attribute is set to true by
                                default.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional.</para>
                                    </listitem>
                                    <listitem>
                                        <para>If this attribute is set to true, the
                                                <code>resourceTypes</code> attribute must be
                                            defined. </para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>namespace</code></td>
                            <td>xsd:anyURI</td>
                            <td>Specifies the namespace for the schema. The namespace must be unique
                                for each product. The same namespace can be used between product
                                schema versions.</td>
                            <td>This attribute is required.</td>
                        </tr>
                        <tr>
                            <td><code>ranEnrichmentStrategy</code></td>
                            <td>Boolean</td>
                            <td>This attribute is required for all event types of type <emphasis
                                    role="bold">USAGE</emphasis>.</td>
                            <td>This attribute is required for event types of type <emphasis
                                    role="bold">USAGE</emphasis>.</td>
                        </tr>
                        <tr>
                            <td><code>resourceTypes</code></td>
                            <td>schema:NameList</td>
                            <td>Contains a whitespace-separated list of the resource types defined
                                in the product schema (for example, <emphasis role="bold"
                                    >SITES_EMAIL</emphasis>). A product schema must specify at least
                                one resource type if the <code>groupByResource</code> attribute is
                                true. </td>
                            <td>This attribute is optional.</td>
                        </tr>
                        <tr>
                            <td><code>serviceCode</code></td>
                            <td>xsd:Name</td>
                            <td>Specifies the name that uniquely identifies the product or service.
                                The value must be a single word; no whitespaces are allowed. The
                                name is used to construct atom categories for events of this
                                type—for example, <emphasis role="italic"
                                    >EmailAppsMSService</emphasis>.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is required.</para>
                                    </listitem>
                                    <listitem>
                                        <para>Each product schema must define a service code
                                            attribute that uniquely identifies the product.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>type</code></td>
                            <td>usage:TypeList</td>
                            <td>Specifies the types of messages that are applicable to this schema,
                                for example, <emphasis role="bold">USAGE_SUMMARY</emphasis>. The
                                default value is <emphasis role="bold">USAGE</emphasis>.</td>
                            <td>
                                <itemizedlist>
                                    <listitem>
                                        <para>This attribute is optional.</para>
                                    </listitem>
                                    <listitem>
                                        <para>For more information, see <link linkend="Event_Types"
                                                  ><emphasis role="bold">Event
                                                Types</emphasis></link>.</para>
                                    </listitem>
                                </itemizedlist>
                            </td>
                        </tr>
                        <tr>
                            <td><code>version</code></td>
                            <td>xsd:string</td>
                            <td>Specifies the version of this particular product schema. Any sort of
                                version string is allowed. Each product schema must have a unique
                                version.</td>
                            <td>This attribute is optional.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>When the product schema is run through the internal build process, a product XSD
                file is generated. The product schema consists of zero or more attributes and zero
                or more attribute groups, each of which can contain custom attributes.</para>
            <para>The following example shows a sample product schema with multiple attributes and
                an attribute group defined.</para>
            <programlisting language="xml" security="internal"><xi:include href="./samples/emailapps_msservice.xml" parse="text"/></programlisting>
            <section xml:id="Attribute_node">
                <title>Attribute node</title>
                <para>The attribute node declares an attribute for a product., such as the name of
                    the product. Attributes are defined in the product schema. The attribute node is
                    a child of the product node. </para>
                <para>The XML attributes of the attribute element can consist of different data
                    types, such as strings or integers. Product attributes can vary in their
                    definitions, but they usually contain the XML attributes described in the
                    following table.</para>
                <para>
                    <table frame="border">
                        <caption>Common XML attributes for the attribute node</caption>
                        <col width="20%"/>
                        <col width="20%"/>
                        <col width="31%"/>
                        <col width="29%"/>
                        <thead>
                            <tr>
                                <th>Attribute</th>
                                <th>Type</th>
                                <th>Description</th>
                                <th>Condition</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>allowedValues</code></td>
                                <td>schema:TokenList</td>
                                <td>Specifies an optional whitespace-separated list of allowed
                                    values.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>default</code></td>
                                <td>xsd:string</td>
                                <td>Specifies the default value of the attribute, if it has a
                                    default value. Only optional attributes can have default
                                    values.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>displayName</code></td>
                                <td>xsd:string</td>
                                <td>Specifies the human readable name for the attribute that can be
                                    used for reports, invoices, and so on. The display name does not
                                    have the same constraints as the name attribute. This attribute
                                    can contain spaces. If this optional attribute is not specified,
                                    the <code>name</code> attribute is used in reports, invoices,
                                    and so on.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>fixed</code></td>
                                <td>xsd:string</td>
                                <td>Specifies the fixed value of the attribute, if it always has a
                                    fixed value.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>max</code></td>
                                <td>schema:MinMaxType</td>
                                <td>Specifies the minimum value allowed in the numeric type. The
                                    value is inclusive.</td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>This attribute is for numeric types only.</para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute is optional.</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td><code>min</code></td>
                                <td>schema:MinMaxType</td>
                                <td>Specifies the minimum value allowed in the numeric type. The
                                    value is inclusive.</td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>This attribute is for numeric types only.</para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute is optional.</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td><code>maxLength</code></td>
                                <td>xsd:integer</td>
                                <td>Specifies the maximum length of a string, and can be used only
                                    for string types. </td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>This attribute is for string types only. </para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute is optional.</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td><code>minLength</code></td>
                                <td>xsd:integer</td>
                                <td>Specifies the minimum length of a string, and can be used only
                                    for string types. If a value is not specified, the default value
                                    of 0 is used. </td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>This attribute is for string types only. </para>
                                        </listitem>
                                        <listitem>
                                            <para>If this attribute is defined, the
                                                  <code>maxLength</code> attribute is also
                                                required.</para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute is optional.</para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td><code>name</code></td>
                                <td>string</td>
                                <td>Specifies the name of the attribute. </td>
                                <td>This attribute is required.</td>
                            </tr>
                            <tr>
                                <td><code>private</code></td>
                                <td>boolean</td>
                                <td>If this attribute is set to true, then the attribute value is
                                    not shown to the public. The default value is false.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>searchable</code></td>
                                <td>boolean</td>
                                <td>If this attribute is set to true, then a category will be
                                    generated for every event based on this attribute's value. The
                                    default value is false.</td>
                                <td>This attribute is optional. </td>
                            </tr>
                            <tr>
                                <td><code>type</code></td>
                                <td>schema:TypeList</td>
                                <td>Specifies the data types that are applicable to this attribute,
                                    for example "string" or "unsignedInt." For more information, see
                                        <link linkend="Allowed_types">Allowed Types</link>.</td>
                                <td>This attribute is required.</td>
                            </tr>
                            <tr>
                                <td><code>use</code></td>
                                <td>schema:Use</td>
                                <td>Specifies whether the product attribute is <emphasis role="bold"
                                        >optional</emphasis>, <emphasis role="bold"
                                        >required</emphasis>, or <emphasis role="bold"
                                        >synthesized</emphasis>. The use attribute is optional, but
                                    if it is not specified, the product attribute is labeled as
                                    optional.</td>
                                <td>This attribute is required.</td>
                            </tr>
                            <tr>
                                <td><code>withEventType</code></td>
                                <td>usage:TypeList</td>
                                <td>This attribute is valid only with events of the following types:
                                        <emphasis role="bold">USAGE</emphasis>, <emphasis
                                        role="bold">CREATE</emphasis>, <emphasis role="bold"
                                        >DELETE</emphasis>. Currently, extended event types are not
                                    supported. This attribute should reference a type from the
                                        <code>type</code> attribute.</td>
                                <td>
                                    <itemizedlist>
                                        <listitem>
                                            <para>This attribute is optional. </para>
                                        </listitem>
                                        <listitem>
                                            <para>This attribute cannot have the value <emphasis
                                                  role="bold">EXTENDED</emphasis>. </para>
                                        </listitem>
                                    </itemizedlist>
                                </td>
                            </tr>
                            <tr>
                                <td><code>withResource</code></td>
                                <td>schema:NameList</td>
                                <td>The attribute is valid only with events that reference the type
                                    of resource specified. This is a whitespace-separated list. The
                                    items on this list must be referenced in the
                                        <code>resourceType</code> attribute in the product
                                    node.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                        </tbody>
                    </table>
                </para>
            </section>
            <section xml:id="Attribute_group">
                <title>Attribute group<?sbr?></title>
                <para>A product schema can contain zero or more attribute groups. An attribute group
                    allows related attributes to be collected in a single node. Several instances of
                    an attribute group may exist in a single product node, giving users the ability
                    to create maps of object types. An attribute group can contain up to 50
                    attributes. </para>
                <para>The following table lists the XML attributes that can be set in an attribute
                    group.</para>
                <para>
                    <table frame="border">
                        <caption>Attribute group</caption>
                        <col width="20%"/>
                        <col width="20%"/>
                        <col width="35%"/>
                        <col width="25%"/>
                        <thead>
                            <tr>
                                <th>Attribute</th>
                                <th>Type</th>
                                <th>Description</th>
                                <th>Condition</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><code>description</code></td>
                                <td>string</td>
                                <td>Provides a description of the attribute group.</td>
                                <td>This atrribute is required.</td>
                            </tr>
                            <tr>
                                <td><code>maxOccurs</code></td>
                                <td>schema:MaxOccurs</td>
                                <td>Specifies the maximum occurrence of the attribute group. The
                                    default value is 1.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>minOccurs</code></td>
                                <td>schema:MinOccurs</td>
                                <td>Specifies the minimum occurrence of the attribute group. The
                                    default value is 1.</td>
                                <td>This attribute is optional.</td>
                            </tr>
                            <tr>
                                <td><code>name</code></td>
                                <td>xsd: Name</td>
                                <td>Specifies the name of the attribute group.</td>
                                <td>This attribute is required.</td>
                            </tr>
                        </tbody>
                    </table>
                </para>
                <para>Following is an example of an attribute group for a product schema.</para>
                <para>
                    <programlisting>&lt;attributeGroup 
       name="additionalPublicAddress"
       minOccurs="0"
       maxOccurs="unbounded">
    &lt;description>A list public addresses&lt;/description>
        &lt;attribute name="ip" type="string" use="required">
            The ip
        &lt;/attribute>
        &lt;attribute name="dns1" type="string" use="required">
            The dns1
        &lt;/attribute>
        &lt;attribute name="dns2" type="string" use="required">
            The dns1
        &lt;/attribute>
&lt;/attributeGroup></programlisting>
                </para>
            </section>
            <section xml:id="x_path_assertion">
                <title>XPath assertion node<?sbr?><?sbr?></title>
                <para>XPath assertion nodes enable you to add further checks to your event using
                    xPath assertions. </para>
                <para>While the basic <code>attribute</code> and <code>attributeGroup</code> schema
                    definitions enable you to define most product events, you can create additional
                    custom formats by using XPathAssertions and the XPath language. For example,
                    there may be a case when the <code>serverID</code> attribute of a product node
                    is only required when the <code>external</code> condition evaluates to <emphasis
                        role="bold">true</emphasis>. This case cannot be enumerated with the basic
                    schema format, but it can be verified with an assertion as shown in the
                    following example.</para>
                <para>
                    <programlisting>&lt;xpathAssertion test="if (not(xsd:boolean(@external))) then @serverID else true()">
    <emphasis role="italic">If the server is NOT external, then the serverID attribute is required.</emphasis>
&lt;/xpathAssertion></programlisting>
                </para>
                <para>This assertion fails if the <code>external</code> value evaluates to <emphasis
                        role="bold">false</emphasis> and the <code>serverID</code> attribute does
                    not exist. If both conditions are met, the assertion passes.</para>
                <para>For more information about XPath, see <link
                        xlink:href="http://en.wikipedia.org/wiki/XPath"
                        >http://en.wikipedia.org/wiki/XPath</link>. </para>
                <para>The XPath context is the product element by default. You can change the
                    context of the root of the entry by setting the <code>scope</code> attribute. </para>
                <para>The following table describes the attributes you can define for an XPath
                    assertion: </para>
                <table frame="border">
                    <caption>XPath assertion attributes</caption>
                    <col width="20%"/>
                    <col width="20%"/>
                    <col width="30%"/>
                    <col width="30%"/>
                    <thead>
                        <tr>
                            <th>Attribute</th>
                            <th>Type</th>
                            <th>Description</th>
                            <th>Condition</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>scope</code></td>
                            <td>schema:XPathScope</td>
                            <td>Specifies the scope of an XPath assertion. The scope determines what
                                the context of the XPath assertion. The value can be either
                                    <emphasis role="bold">product</emphasis> or <emphasis
                                    role="bold">entry</emphasis>. The default value for this
                                attribute is <emphasis role="bold">product</emphasis>.</td>
                            <td>When the scope is <emphasis role="bold">entry</emphasis>, the
                                    variables <code>$entry</code>, <code>$event</code>, and
                                        <code>$product</code> are defined, each pointing to the
                                    respective part of the message.
                            </td>
                        </tr>
                        <tr>
                            <td><code>test</code></td>
                            <td>xsd:string</td>
                            <td>Specifies the XPath test.</td>
                            <td>This attribute is required.</td>
                        </tr>
                    </tbody>
                </table>
            </section>
            <section xml:id="Versions">
                <title>Versioning</title>
                <para>The <code>event</code> and <code>product</code> nodes are version-controlled.
                    Cloud Feeds can support events that contain different definitions for the event
                    and product nodes simultaneously. This flexibility enables publishers to define
                    a new event without breaking older events that have not yet adopted the new
                    definition. The event and product versions are independent of each other.</para>
                <para>For example, if you specify <code>&lt;event version="2"></code>, Cloud Feeds
                    will apply different rules to the <code>startTime</code> and
                        <code>endTime</code> attributes than if you specify <code>&lt;event
                        version="1"></code>. </para>
                <para>You can define multiple versions for a specific product within a schema as
                    shown in the following example.</para>
                <example>
                    <title>Product versioning example</title>
                    <programlisting language="xml"><xi:include href="./samples/BigDataVersioningExample.xml" parse="text"/></programlisting>
                </example>
            </section>
        </section>
        <section xml:id="Allowed_types">
            <title>Allowed data types</title>
            <para>The following table provides a list of allowed data types for product schema
                definitions.</para>
            <para>
                <table frame="border">
                    <caption>Allowed data types</caption>
                    <col width="25%"/>
                    <col width="75%"/>
                    <thead>
                        <tr>
                            <th>Type</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>anyURI</code></td>
                            <td>Specifies a Uniform Resource Identifier. This includes not only
                                Uniform Resource Locators (URLs), but also Uniform Resource Names
                                (URNs). Both relative and absolute URLs are allowed.</td>
                        </tr>
                        <tr>
                            <td><code>anyURI</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>anyURI</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>base64Binary</code></td>
                            <td>Specifies an arbitrary sequence of bytes that has been encoded in
                                ASCII characters using the Base-64 algorithm defined in <link
                                    xlink:href="https://www.ietf.org/rfc/rfc2045.txt">RFC
                                    2045</link>. The letters A–Z and a–z, the digits 0–9, and the
                                punctuation marks + and / are used to encode data according to an
                                algorithm that maps four of these characters to three arbitrary
                                bytes. The equal sign is used to pad data at the end if
                                necessary.</td>
                        </tr>
                        <tr>
                            <td><code>boolean</code></td>
                            <td>Specifies a Boolean value.</td>
                        </tr>
                        <tr>
                            <td><code>boolean</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>boolean</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>byte</code></td>
                            <td>Specifies a signed integer that can be represented by a single byte.
                                The minimum value of a byte is -128, the maximum value is 127.</td>
                        </tr>
                        <tr>
                            <td><code>byte</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>byte</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>date</code></td>
                            <td>The <code>date</code> type represents a specific day in history such
                                as September 26, 2005. Dates are written in the form <emphasis
                                    role="italic">CCYY-MM-DD</emphasis>. For example, September 26,
                                2005 is written as 2005-09-26.</td>
                        </tr>
                        <tr>
                            <td><code>date</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>date</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>dateTime</code></td>
                            <td>Specifies a specific moment in history, such as 3:32 p.m., September
                                26, 2003. An optional time zone indicator in the form ±hh:mm can be
                                suffixed to provide a time example, 2003-09-26T15:32:00-05:00 is
                                3:32 p.m., September 26, 2003 in the U.S. Eastern</td>
                        </tr>
                        <tr>
                            <td><code>dateTime</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>dateTime</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>double</code></td>
                            <td>Specifies a decimal value that can be represented by an eight-byte
                                floating-point number in IEEE 754 format. Values such as INF
                                (infinity) and NaN (not a number) are allowed.</td>
                        </tr>
                        <tr>
                            <td><code>double</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>double</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>duration</code></td>
                            <td>Specifies a length of time, such as 15 minutes; 2 hours; or 3 years,
                                7 months, 2 days, 8 hours, 32 minutes, and 12 seconds. This value
                                does not have a specific beginning or end. For more information see
                                the note below. </td>
                        </tr>
                        <tr>
                            <td><code>duration</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>duration</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>float</code></td>
                            <td>Specifies a decimal value that can be represented by a four-byte
                                floating-point number in IEEE 754 format. Values such as INF
                                (infinity) and NaN (not a number) are allowed.</td>
                        </tr>
                        <tr>
                            <td><code>float</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>float</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>gDay</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>gDay</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>gMonth</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>gMonth</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>gYear</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>gYear</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>gMonthDay</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>gMonthDay</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>gMonthYear</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>gMonthYear</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>int</code></td>
                            <td>Specifies a signed integer that can be represented by four bytes.
                                The minimum value of an <code>int</code> is -2147483648, the maximum
                                value is 2147483647.</td>
                        </tr>
                        <tr>
                            <td><code>int</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>int</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>integer</code></td>
                            <td>Specifies an integer value of arbitrary size.</td>
                        </tr>
                        <tr>
                            <td><code>integer</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>integer</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>long</code></td>
                            <td>Specifies a signed integer that can be represented by eight bytes.
                                The minimum value of a <code>long</code> is 9223372036854775807, the
                                maximum value is -9223372036854775808.</td>
                        </tr>
                        <tr>
                            <td><code>long</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>long</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>Name</code></td>
                            <td>Specifies a valid name. This name must be a string that consists
                                exclusively of letters, digits, ideographs, underscore, hyphen,
                                period, and colon. Digits, hyphens, and periods may not be used to
                                start a name, although they can be used inside the name.</td>
                        </tr>
                        <tr>
                            <td><code>Name</code>*</td>
                            <td>Specifies a list of names.</td>
                        </tr>
                        <tr>
                            <td><code>short</code></td>
                            <td>Specifies a signed integer that can be represented by two bytes. The
                                minimum value of a <code>short</code> is -32768, the maximum value
                                is 32767.</td>
                        </tr>
                        <tr>
                            <td><code>short</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>short</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>string</code></td>
                            <td>Specifies any sequence of characters.</td>
                        </tr>
                        <tr>
                            <td><code>string</code>*</td>
                            <td>Specifies a list of strings.</td>
                        </tr>
                        <tr>
                            <td><code>time</code></td>
                            <td>Specifies a specific time of day on no particular day, such as 3:32
                                P.M. Times are written in the form ±hh:mm:ss.xxx using a 24-hour
                                clock and as many fractions of a second as necessary. An optional
                                time zone indicator in the form ±hh:mm may be suffixed to provide a
                                time zone as an offset from Coordinated Universal Time (UTC). For
                                example, 15:32:00-05:00 is 3:32 P.M., in the U.S. Eastern time zone.
                                A Z can be used instead to indicate UTC: 00:00:00Z.</td>
                        </tr>
                        <tr>
                            <td><code>time</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>time</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedByte</code></td>
                            <td>Specifies an unsigned integer that can be represented by a single
                                byte. The minimum value of a byte is 0, the maximum value is
                                255.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedByte</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>unsignedByte</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedInt</code></td>
                            <td>Specifies an unsigned integer that can be represented by four bytes.
                                The minimum value of an <code>unsignedInt</code> is 0, the maximum
                                value is 4294967295.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedInt</code>*</td>
                            <td>Specifies whitespace-separated list of <code>unsignedInt</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedLong</code></td>
                            <td>Specifies an unsigned integer that can be represented by eight
                                bytes. The minimum value of an <code>unsignedLong</code> is 0, the
                                maximum value is 18446744073709551615.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedLong</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>unsignedLong</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedShort</code></td>
                            <td>Specifies an unsigned integer that can be represented by two bytes.
                                The minimum value of an <code>unsignedShort</code> is 0, the maximum
                                value is 65535.</td>
                        </tr>
                        <tr>
                            <td><code>unsignedShort</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>unsignedShort</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>utcDateTime</code></td>
                            <td>Specifies a <code>dateTime</code> constraint to be in the UTC time
                                zone. That is the time zone offset must be 0 or the value must end
                                with Z.</td>
                        </tr>
                        <tr>
                            <td><code>utcDateTime</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>utcDateTime</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>utcTime</code></td>
                            <td>Specifies a time constraint for the UTC time zone. The time zone
                                offset must be 0 or the value must end with Z.</td>
                        </tr>
                        <tr>
                            <td><code>utcTime</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>utcTime</code>
                                values.</td>
                        </tr>
                        <tr>
                            <td><code>UUID</code></td>
                            <td>Specifies a universally unique identifier in its canonical form: 32
                                hexadecimal digits, displayed in five groups separated by hyphens,
                                in the form 8-4-4-4-12 for a total of 36 characters (32 digits and
                                four hyphens). For example,
                                7eadda6a-9f3e-11e1-9ef4-77b6922f8866.</td>
                        </tr>
                        <tr>
                            <td><code>UUID</code>*</td>
                            <td>Specifies a whitespace-separated list of <code>UUID</code>
                                values.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>
                <note>
                    <para>Durations are represented by using the ISO-8601 standard format P<emphasis
                            role="italic">n</emphasis>Y<emphasis role="italic"
                            >n</emphasis>M<emphasis role="italic">n</emphasis>DT<emphasis
                            role="italic">n</emphasis>H<emphasis role="italic"
                            >n</emphasis>M<emphasis role="italic">n</emphasis>S. <emphasis
                            role="italic">n</emphasis>Y specifies the number of years, <emphasis
                            role="italic">n</emphasis>M the number of months, <emphasis
                            role="italic">n</emphasis>D the number of days, <emphasis role="italic"
                            >n</emphasis>H the number of hours, <emphasis role="italic"
                        >n</emphasis>M the number of minutes, and <emphasis role="italic"
                            >n</emphasis>S the number of seconds. The number of years, months, days,
                        hours, minutes, and seconds are all specified as nonnegative integers. The
                        number of seconds is a decimal number with as many places after the decimal
                        point as necessary. For example, in this format, 3 years, 7 months, 2 days,
                        8 hours, 32 minutes, and 12 seconds is written as P3Y7M2DT8H32M12S. Any
                        values that are zero can be omitted. A duration of 2 years and 2 minutes can
                        be written as P2YT2M. If there are no hours, minutes, or seconds, then the T
                        is omitted. A duration of two years is written as P2Y. A leading minus sign
                        before the P indicates a negative duration.</para>
                </note>
            </para>
        </section>
    </chapter>
    <chapter xml:id="Using_Cloud_Feeds">
        <title>Preparing a feed for publication through Cloud Feeds</title>
        <para>To define a new event, you need to submit a pull request on the <link
                xlink:href="https://github.com/rackerlabs/standard-usage-schemas"
                >https://github.com/rackerlabs/standard-usage-schemas</link> repository. </para>
        <para>To submit this pull request, you first need to complete the following steps:</para>
        <para>
            <itemizedlist>
                <listitem>
                    <para><link linkend="Define_product_schema">Define your XML product
                            schema</link>
                    </para>
                </listitem>
                <listitem>
                    <para><link linkend="Generate_schema_and_WADLs">Generate schemas and
                            WADLs</link></para>
                </listitem>
                <listitem>
                    <para><link linkend="Add_feed_to_wadl">Add your feed to the allfeeds.wadl
                            file</link></para>
                </listitem>
                <listitem>
                    <para><link linkend="Add_sample_files">Add message samples</link></para>
                </listitem>
                <listitem>
                    <para><link linkend="Add_feed_to_the_document">Add your feed to be included in
                            the documentation</link></para>
                </listitem>
                <listitem>
                    <para><link linkend="Test_your_feed">Test your feed</link></para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            <note>
                <para>These steps assume that you have already set up a repo for Cloud Feeds in
                    GitHub.</para>
            </note>
        </para>
        <section xml:id="Define_product_schema">
            <title>Defining your product schema</title>
            <para>After you have forked the repository and created a branch, you need to create a
                new XML file to define the product-specific schema.</para>
            <para>Create a new file using the <emphasis role="bold"
                    >sample_product_schemas/&lt;new_product_name>.xml</emphasis> naming convention,
                for example <emphasis role="italic">sample_product_schemas/nova.xml</emphasis>. </para>
            <para>To define your product schema you need to complete the following steps:</para>
            <para>
                <orderedlist>
                    <listitem>
                        <para>Read the <link linkend="Product_node"><emphasis role="bold">Product
                                    node</emphasis></link> section.</para>
                    </listitem>
                    <listitem>
                        <para>Define the <code>productSchema</code> node.</para>
                    </listitem>
                    <listitem>
                        <para>Define the <code>description</code> node.</para>
                    </listitem>
                    <listitem>
                        <para>Add the attributes and attribute groups for your product.</para>
                    </listitem>
                </orderedlist>
            </para>
            <section xml:id="defining_product_schema_node"><title>Defining the productSchema node</title>
   
            <para>When you create your product schema, you first need to define the
                        <code>productSchema</code> node. Defining the <code>productSchema</code>
                    node requires that you <link linkend="Selecting_namespace">select a namespace
                        for your product</link>.</para>
                <para>The <code>productSchema</code> node has the following attributes.</para>
            <para>
                <table frame="border">
                    <caption>Product schema node attributes</caption>
                    <col width="26%"/>
                    <col width="74%"/>
                    <thead>
                        <tr>
                            <th>Attribute</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><code>xmlns</code></td>
                            <td>Specifies the URL for your feed.</td>
                        </tr>
                        <tr>
                            <td><code>namespace</code></td>
                            <td>Specifies the namespace for your product. For more information, see
                                        <link linkend="Selecting_namespace"><emphasis role="bold"
                                            >Selecting a namespace</emphasis></link>.</td>
                        </tr>
                        <tr>
                            <td><code>serviceCode</code></td>
                            <td>Specifies the name that uniquely identifies the product or service.</td>
                        </tr>
                        <tr>
                            <td><code>type</code></td>
                            <td>Specifies the message type that is applicable to the product
                                schema.</td>
                        </tr>
                        <tr>
                            <td><code>version</code></td>
                            <td>Specifies the product version.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
                <para>Following is an example of a <code>productSchema</code>
                    node.<programlisting>&lt;productSchema xmlns="http://docs.rackspace.com/core/usage/schema"
               namespace="http://docs.rackspace.com/event/ebs/bu-team"
               serviceCode="EBS"
               type="CREATE UPDATE DELETE"
               version="1"></programlisting></para>
            <para> </para>
        <section xml:id="Selecting_namespace">
            <title>Selecting a namespace</title>
            <para>When you specify the <code>productSchema</code> node, you need to define an
                        appropriate <code>namespace</code> attribute for your product. </para>
            <para>For <emphasis role="bold">usage</emphasis> events, use the following convention
                for namespaces.</para>
            <programlisting>http://docs.rackspace.com/usage/{product}/{message_type} </programlisting>
            <para>The following are examples of namespaces for usage events.</para>
                <programlisting>http://docs.rackspace.com/usage/sites/subscription</programlisting>
<programlisting>http://docs.rackspace.com/usage/cloudbackup/storage</programlisting>
            <para>For <emphasis role="bold">system</emphasis> events, the convention of the
                    namespace is as follows.</para>
            <programlisting>http://docs.rackspace.com/event/{product}/{message_type} </programlisting>
            <para>The following is an example of a namespace for a system event.</para>
                <programlisting>http://docs.rackspace.com/event/lbaas/node</programlisting></section></section>
            <section xml:id="Adding_a_description"><title>Defining the description node </title>
            <para>After you have defined the <code>productSchema</code> node, you need to add a
                        <code>description</code> node. In the <code>description</code> node, you
                    need to include a brief description of what kind of information is included in
                    the event.</para>
                <para>Following is an example of a <code>description</code>
                    node.<programlisting>&lt;description>
        Specifies the team mapping to the business unit.
&lt;/description></programlisting></para>
            </section>
        <section xml:id="Defining_attributes_and_attribute_groups"><title>Defining the attributes and attribute groups</title><para>After you have defined the <code>productSchema</code> and <code>description</code> nodes, you
                    need to add the appropriate <code>attibute</code> and
                        <code>attributeGroup</code> nodes for your product. For more information
                    about attributes an attribute groups, see <link linkend="Attribute_group"
                            ><emphasis role="bold">Attribute node</emphasis></link> and <link
                        linkend="Attribute_group"><emphasis role="bold">Attribute
                        group</emphasis></link>.</para>
                <para>Following is an example of a completed product schema file.</para>
                <para>
                    <programlisting>&lt;productSchema xmlns="http://docs.rackspace.com/core/usage/schema"
               namespace="http://docs.rackspace.com/event/ebs/bu-team"
               serviceCode="EBS"
               type="CREATE UPDATE DELETE"
               version="1">
    &lt;description>
        Specifies the team mapping to the business unit.
    &lt;/description>
    &lt;attribute name="businessUnit" type="string" use="required"
         maxLength="150">
        Specifies the business unit name.
    &lt;/attribute>

    &lt;attribute name="description" type="string" use="required" 
        maxLength="255">
        Specifies the description of the event.
    &lt;/attribute>
    &lt;attributeGroup name="team" minOccurs="0" maxOccurs="unbounded">
        &lt;description>
            Specifies the team name and number which belongs to
        the listed business number.
        &lt;/description>
        &lt;attribute name="name" type="string" use="required" 
        maxLength="255">
            Specifes the team name.
        &lt;/attribute>
        &lt;attribute name="number" type="string" use="required"
       maxLength="150">
            Specifies the team number.
        &lt;/attribute>
    &lt;/attributeGroup>
&lt;/productSchema></programlisting>
                </para></section></section>
        <section xml:id="Generate_schema_and_WADLs">
            <title>Generating schemas and WADL files</title>
            <para>After you have created the sample product schema, you need to perform a build to
                generate the schemas and WADL files.</para>
            <para>The following items are generated during a build process.</para>
            <para>
                <table frame="border">
                    <caption>Files that are generated during build</caption>
                    <col width="43%"/>
                    <col width="57%"/>
                    <thead>
                        <tr>
                            <th>Generated File</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><emphasis role="bold">generated_product_xsds/*.xsd</emphasis></td>
                            <td>This file is generated from sample product schemas.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">core_xsd/usage.xsd</emphasis></td>
                            <td>This file enumerates all product xsd files which are generated.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="bold">wadl/product.wadl</emphasis></td>
                            <td> Contains the WADL resources for all generated product schemas.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>To generate the necessary schema and WADL files, at a command-line interface, type
                the following at a command-line interface.</para>
     <para>
                            <programlisting>$ mvn initialize</programlisting>
                        </para>
        </section>
        <section xml:id="Add_feed_to_wadl"><title>Adding the feed to the allfeeds.wadl file</title><para>After you have generated the appropriate schemas and WADLs, you need to add your feed to
                allfeeds.wadl.</para>
            <para>If you want to make your feed available for <emphasis role="bold"
                    >internal</emphasis> users only, open the <code>allfeeds.wadl</code> file and
                add the following resource.</para>
            <para>
                <programlisting>&lt;resource id="new_product" 
   path="new_product/events"
   type="wadl/feed.wadl#AtomFeed
         wadl/product.wadl#[NewProductServiceCode]"/>  </programlisting>
            </para>
            <para>Alternatively, if you want to make your feed available to <emphasis role="bold"
                    >internal</emphasis> and <emphasis role="bold">external</emphasis> users, you
                need to add the following resource.</para>
            <para>
                <programlisting>&lt;resource id="new_product"
    path="new_product/events"
    type="wadl/feed.wadl#AtomFeed
          wadl/product.wadl#[<emphasis role="italic">NewProductServiceCode</emphasis>]
          wadl/feed.wadl#TenantAtomFeed
          wadl/products.wadl#[<emphasis role="italic">NewProductServiceCode</emphasis>]Tenant"/></programlisting>
            </para>
            <?sbr?></section>
        <section xml:id="Add_sample_files">
            <title>Adding samples</title>
            <para>You can use Maven to generate sample responses and entries for each version of
                your product schema. </para>
            <para>To generate samples, type the following.</para>
            <para>
                <programlisting> mvn -P generate-samples clean generate-sources -DproductSchema=sample_product_schemas/[new_product.xml] -DfeedName=[feed_name] </programlisting>
            </para>
            <para>The sample files are generated under the <emphasis role="bold"
                    >message_samples/[feed_name]</emphasis> directory and follow the following
                naming conventions:</para>
            <itemizedlist>
                <listitem>
                    <para><emphasis role="italic">
                            $serviceCode-$nsPart-$eventType-v$versionNum-entry.xml</emphasis></para>
                </listitem>
                <listitem>
                    <para>
                        <emphasis role="italic"
                            >$serviceCode-$nsPart-$eventType-v$versionNum-response.xml</emphasis></para>
                </listitem>
                <listitem>
                    <para><emphasis role="italic"
                            >$serviceCode-$nsPart-$resourceType-$eventType-v$versionNum-entry.xml</emphasis></para>
                </listitem>
                <listitem>
                    <para><emphasis role="italic"
                            >$serviceCode-$nsPart-$resourceType-$eventType-v$versionNum-response.xml</emphasis></para>
                </listitem>
            </itemizedlist>
            <para>The following table provides a breakdown of the different elements in the naming
                convention.</para>
            <para>
                <table frame="border">
                    <caption>Naming convention for sample names</caption>
                    <col width="17%"/>
                    <col width="83%"/>
                    <thead>
                        <tr>
                            <th>Element</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><emphasis role="italic">$serviceCode</emphasis></td>
                            <td>Specifies the value of the <code>serviceCode</code> attribute in the
                                product schema.</td>
                        </tr>
                        <tr>
                            <td><emphasis role="italic">$nsPart</emphasis></td>
                            <td>Specifies the last path segment in the product namespace. For
                                example, if the product namespace is
                                http://docs.rackspace.com/usage/widget, then the <emphasis
                                    role="italic">nsPart </emphasis>segment should be named
                                "widget".</td>
                        </tr>
                        <tr>
                            <td><emphasis role="italic">$resourceType</emphasis></td>
                            <td>Specifies the value of the <code>resourceType</code> attribute in
                                the sample event XML file</td>
                        </tr>
                        <tr>
                            <td><emphasis role="italic">$eventType</emphasis></td>
                            <td>Specifies the value of the <code>type</code> attribute of the event
                                element in the sample event XML file.</td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <para>An example file name is <emphasis role="italic"
                    >support-account-account_support-create-v1-entry.xml</emphasis>.</para>
            <para>You may have to manually edit the generated samples to ensure they are valid and
                semantically correct. For example, the product schema may contain XPath assertions
                that may not be met by the generated samples.</para>
            <para>For generated samples, the following assumptions are made:</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>If the product schema requires a <code>resourceId</code> attribute,
                            its value is set to <emphasis role="italic"
                                >4a2b42f4-6c63-11e1-815b-7fcbcf67f549</emphasis>.</para>
                    </listitem>
                    <listitem>
                        <para>If the product schema contains <code>xpathAssertion</code> nodes, the
                            assertions might not be satisfied by the generated content.</para>
                    </listitem>
                    <listitem>
                        <para>No optional nodes or attributes are generated.</para>
                    </listitem>
                    <listitem>
                        <para>The <code>withEventType</code> and <code>withResource</code>
                            attributes are not processed.</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section xml:id="Add_feed_to_the_document"><title>Adding the feed to the documentation</title><para>As a next step, you need to add your feed to the documentation source files to ensure that it
                appears in the Cloud Feeds Developer Guide. These source files are located in the
                    <emphasis role="bold">src/docbkx</emphasis> location.</para>
            <para>You need to edit the following files depending on whether your feed is for
                internal or external users.</para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="italic">api-operations-internal.xml</emphasis> for
                                <emphasis role="bold">internal</emphasis> users</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="italic">api-operations-external.xml</emphasis> for
                                <emphasis role="bold">external</emphasis> users</para>
                    </listitem>
                </itemizedlist>
  </para>
        <para>
                <note>
                    <para>Different resources are required for internal and external feeds.</para>
                </note>
            </para>
            <para>You need to add a <code>section</code> node to the appropriate source file that
                contains information specific to the feed, including a <code>title</code> attribute,
                as well as the corresponding URL and the appropriate resource hrefs.</para>
        <para>A <code>section</code> node for a new feed to be added to the <emphasis role="italic"
                    >api-operations-internal.xml</emphasis> source file should look like the
                following example.
                <programlisting>&lt;section xml:id="bigdata.product">
   &lt;title>Cloud Big Data&lt;/title>
   &lt;resources xmlns="http://wadl.dev.java.net/2009/02">
    &lt;resource href="../../allfeeds.wadl#bigdata_events"/>
    &lt;resource href="../../allfeeds.wadl#bigdata_events_getEntry_BigData"/>
   &lt;/resources>
&lt;/section></programlisting></para>
            <para>A <code>section</code> node for a new feed to be added to the <emphasis
                    role="italic">api-operations-external.xml</emphasis> source file should look
                like the following example. </para>
            <para>
                <programlisting>&lt;section xml:id="bigdata.product">
 &lt;title>Cloud Big Data&lt;/title>
 &lt;resources xmlns="http://wadl.dev.java.net/2009/02">
  &lt;resource href="../../allfeeds.wadl#bigdata_events_tenanted_feed"/>
  &lt;resource href="../../allfeeds.wadl#bigddata_events_getEntry_BigDataTenant"/>
 &lt;/resources>
&lt;/section></programlisting>
            </para></section>
        <section xml:id="Test_your_feed"><title>Testing the feed</title><para>After you have added all the appropriated resources for your feed, you can use Maven to test
                your feed and events.</para>
            <para>To test your feed, type the following at a command-line interface.</para>
            <para>
                <programlisting>mvn test</programlisting>
            </para>
            <para>Running this test notifies you if there are any issues with the product schema or
                sample files.</para></section>
        <section xml:id="Submit_Pull_Request"><title>Submitting a pull request</title>
            <para>After you have completed all the steps for creating a feed, you need to submit a
                pull request on the <link
                    xlink:href="https://github.com/rackerlabs/standard-usage-schemas"><emphasis
                        role="bold"
                    >https://github.com/rackerlabs/standard-usage-schemas</emphasis></link>
                repo.</para></section>
    </chapter>
</book>
