<?xml version="1.0" encoding="UTF-8"?>
<!--THIS SCHEMA IS AUTOGENERATED DO NOT EDIT-->
<xsd:schema xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:html="http://www.w3.org/1999/xhtml"
            xmlns:xerces="http://xerces.apache.org"
            xmlns:saxon="http://saxon.sf.net/"
            xmlns="http://www.w3.org/2001/XMLSchema"
            xmlns:usage="http://docs.rackspace.com/core/usage"
            xmlns:p="http://docs.rackspace.com/usage/cloudbackup/license"
            elementFormDefault="qualified"
            attributeFormDefault="unqualified"
            targetNamespace="http://docs.rackspace.com/usage/cloudbackup/license">
   <element name="product"
            type="p:CloudBackup2Type"
            vc:minVersion="1.0"
            vc:maxVersion="1.1">
      <annotation>
         <documentation>
            <html:p>
                        Alternates are not supported by XSD 1.0.  So
                        in XSD 1.0 we are only supporting a single
                        version (in this case version 2).
                    </html:p>
            <html:p>
                        To support other versions you may redefine the
                        product element to any of the following types:
                    </html:p>
            <html:ol>
               <html:li>p:CloudBackup1Type</html:li>
               <html:li>p:CloudBackup2Type</html:li>
            </html:ol>
         </documentation>
      </annotation>
   </element>
   <element name="product" vc:minVersion="1.1" type="p:BaseCloudBackupType">
      <alternative test="@version eq '1'" type="p:CloudBackup1Type"/>
      <alternative test="@version eq '2'" type="p:CloudBackup2Type"/>
      <alternative type="p:BaseCloudBackupTypeError"/>
   </element>
   <complexType name="BaseCloudBackupType">
      <attribute name="version" type="xsd:string" use="required"/>
      <attribute name="serviceCode"
                 use="required"
                 type="xsd:Name"
                 fixed="CloudBackup"/>
   </complexType>
   <complexType name="BaseCloudBackupTypeError" vc:minVersion="1.1">
      <complexContent>
         <extension base="p:BaseCloudBackupType">
            <openContent mode="interleave">
               <any processContents="skip"/>
            </openContent>
            <anyAttribute processContents="skip"/>
            <assert test="false()"
                    xerces:message="For this type of message, only  versions ( 1, 2 ) are supported."
                    saxon:message="For this type of message, only  versions ( 1, 2 ) are supported."/>
         </extension>
      </complexContent>
   </complexType>
   <complexType name="CloudBackup1Type">
      <annotation>
         <documentation>
            <html:p>Cloud Backup periodic license event.</html:p>
         </documentation>
         <appinfo>
            <usage:core groupByResource="true" type="USAGE"/>
         </appinfo>
      </annotation>
      <complexContent>
         <extension base="p:BaseCloudBackupType">
            <attribute name="resourceType" use="required" type="p:ResourceTypes1"/>
            <attribute name="serverID" use="required">
               <annotation>
                  <documentation>
                     <html:p>Server ID, where the agent in installed.</html:p>
                  </documentation>
                  <appinfo>
                     <usage:attributes aggregateFunction="NONE" groupBy="false"/>
                  </appinfo>
               </annotation>
               <simpleType>
                  <union memberTypes="xsd:int p:UUID"/>
               </simpleType>
            </attribute>
         </extension>
      </complexContent>
   </complexType>
   <simpleType name="ResourceTypes1">
      <annotation>
         <documentation>
            <html:p>Resource Types for this product.</html:p>
         </documentation>
      </annotation>
      <restriction base="xsd:token">
         <enumeration value="AGENT"/>
      </restriction>
   </simpleType>
   <complexType name="CloudBackup2Type">
      <annotation>
         <documentation>
            <html:p>Cloud Backup periodic license event (version 2).</html:p>
         </documentation>
         <appinfo>
            <usage:core groupByResource="true" type="USAGE"/>
         </appinfo>
      </annotation>
      <complexContent>
         <extension base="p:BaseCloudBackupType">
            <attribute name="resourceType" use="required" type="p:ResourceTypes2"/>
            <attribute name="serverID" use="optional">
               <annotation>
                  <documentation>
                     <html:p>Server ID, where the agent in installed.</html:p>
                  </documentation>
                  <appinfo>
                     <usage:attributes aggregateFunction="NONE" groupBy="false"/>
                  </appinfo>
               </annotation>
               <simpleType>
                  <union memberTypes="xsd:int p:UUID"/>
               </simpleType>
            </attribute>
            <attribute name="serverName" use="required" type="p:string">
               <annotation>
                  <documentation>
                     <html:p>Server Name, where the agent is installed</html:p>
                  </documentation>
                  <appinfo>
                     <usage:attributes aggregateFunction="NONE" groupBy="false"/>
                  </appinfo>
               </annotation>
            </attribute>
            <attribute name="external"
                       use="optional"
                       default="false"
                       type="xsd:boolean">
               <annotation>
                  <documentation>
                     <html:p>True if the server where the agent is installed is external to Rackspace</html:p>
                  </documentation>
                  <appinfo>
                     <usage:attributes aggregateFunction="NONE" groupBy="false"/>
                  </appinfo>
               </annotation>
            </attribute>
            <assert vc:minVersion="1.1"
                    test="if (not(xsd:boolean(@external))) then @serverID else true()"
                    xerces:message="If the server is NOT external, then Server ID is required."
                    saxon:message="If the server is NOT external, then Server ID is required.">
               <annotation>
                  <documentation>
                     <html:p>Assertion: If the server is NOT external, then Server ID is required.</html:p>
                  </documentation>
               </annotation>
            </assert>
         </extension>
      </complexContent>
   </complexType>
   <simpleType name="ResourceTypes2">
      <annotation>
         <documentation>
            <html:p>Resource Types for this product.</html:p>
         </documentation>
      </annotation>
      <restriction base="xsd:token">
         <enumeration value="AGENT"/>
      </restriction>
   </simpleType>
   <simpleType name="UUID">
      <restriction base="xsd:string">
         <length value="36" fixed="true"/>
         <pattern value="[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"/>
      </restriction>
   </simpleType>
   <simpleType name="string">
      <restriction base="xsd:string">
         <minLength value="0"/>
         <maxLength value="255"/>
      </restriction>
   </simpleType>
</xsd:schema>
