<?xml version="1.0" encoding="UTF-8"?>

<schema
    elementFormDefault="qualified"
    attributeFormDefault="unqualified"
    xmlns="http://www.w3.org/2001/XMLSchema"
    xmlns:event="http://docs.rackspace.com/core/event"
    xmlns:xerces="http://xerces.apache.org"
    xmlns:saxon="http://saxon.sf.net/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning"
    targetNamespace="http://docs.rackspace.com/core/event">

    <complexType name="EventBase" abstract="true">
        <annotation>
            <documentation>
                <html:p>
                    This is the base type for all event records.  The
                    only thing that is required is a version
                    attribute.
                </html:p>
            </documentation>
        </annotation>
        <attribute name="version" type="xsd:string" use="required">
            <annotation>
                <documentation>
                    <html:p>
                        Event record version.
                    </html:p>
                </documentation>
            </annotation>
        </attribute>
    </complexType>

    <complexType name="EventV1">
        <annotation>
            <documentation>
                <html:p>
                    Event information version 1.
                </html:p>
            </documentation>
        </annotation>
        <complexContent>
            <extension base="event:EventBase">
                <sequence>
                    <any namespace="##other" processContents="strict" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
                <attribute name="tenantId" type="xsd:string" use="required">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the tenant ID.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="serviceCode" type="xsd:string" use="required">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the product.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="resourceId" type="xsd:string" use="required">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies an instance of the product.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="id" type="event:UUID" use="required">
                    <annotation>
                        <documentation>
                            <html:p>
                                A GUID identifying the event record.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="type" type="event:EventType" use="required">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the type of event.  If one
                                of the existing event types don't feed
                                set this type to EXTENDED and add an
                                eventType attribute to your product
                                schema.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="dataCenter" type="xsd:string" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the datacenter of the resource.
                                For example DFW3.
                            </html:p>
                            <html:p>
                                The use of the attribute is optional,
                                however, if the attribute is not
                                specified "global" will be assumed.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="region" type="xsd:string" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                Identifies the region.
                            </html:p>
                            <html:p>
                                The use of the attribute is optional,
                                however, if the attribute is not
                                specified "global" will be assumed.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="startTime" type="event:UTCDateTime" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                UTC, ISO Format start time.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="endTime" type="event:UTCDateTime" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                UTC, ISO Format end time.  For an EXISTs
                                event, the startTime and endTime reflect the
                                event duriation for the resource instance.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="eventTime" type="event:UTCDateTime" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                UTC, ISO Format event time. The time
                                when an event occured. Use instead of
                                startTime and endTime in cases where
                                the event does not have a range.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="resourceName" type="xsd:string" use="optional">
                    <annotation>
                        <documentation>
                            <html:p>
                                Customer defined name for the resource.
                            </html:p>
                        </documentation>
                    </annotation>
                </attribute>
                <assert vc:minVersion="1.1" test="if (@type eq 'EXTENDED') then child::*/@eventType else true()"
                        xerces:message="The event type is set to EXTENDED, but couldn't find eventType attribute in the product data."
                        saxon:message="The event type is set to EXTENDED, but couldn't find eventType attribute in the product date.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the type is equal to 'EXTENDED'
                                then the product attributes should
                                contain an eventType element, which
                                will contain the actual EventType.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@type eq 'USAGE') then @startTime else true()"
                        xerces:message="Usage events must have a startTime."
                        saxon:message="Usage events must have a startTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the type is equal to 'USAGE'
                                then the event should have a start time.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (not(@eventTime) and not(@startTime) and not(@endTime)) then false() else true()"
                        xerces:message="The event must have a startTime and endTime or it must have an eventTime."
                        saxon:message="The event must have a startTime and endTime or it must have an eventTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                The event must have a start time and
                                end time or it must have an eventTime.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@eventTime) then (not(@startTime) and not(@endTime)) else true()"
                        xerces:message="If the event has an eventTime then it cannot have a startTime or an endTime."
                        saxon:message="If the event has an eventTime then it cannot have a startTime or an endTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the event has an eventTime then it
                                must not have a startTime or an
                                endTime.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@startTime) then (not(@eventTime) and @endTime) else true()"
                        xerces:message="If the event has a startTime then it cannot have an eventTime and it must have an endTime."
                        saxon:message="If the event has a startTime then it cannot have an eventTime and it must have an endTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the event has a startTime then it
                                must not have an eventTime and it must
                                have an endTime.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
                <assert vc:minVersion="1.1" test="if (@endTime) then (not(@eventTime) and @startTime) else true()"
                        xerces:message="If the event has a endTime then it cannot have an eventTime and it must have a startTime."
                        saxon:message="If the event has a endTime then it cannot have an eventTime and it must have a startTime.">
                    <annotation>
                        <documentation>
                            <html:p>
                                If the event has a endTime then it
                                must not have an eventTime and it must
                                have a startTime.
                            </html:p>
                        </documentation>
                    </annotation>
                </assert>
            </extension>
        </complexContent>
    </complexType>

    <simpleType name="UUID">
        <annotation>
            <documentation>
                <html:p>
                    A universally unique identifier.
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:string">
            <length value="36" fixed="true"/>
            <pattern value="[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}"/>
        </restriction>
    </simpleType>

    <simpleType name="UTCDateTime">
        <annotation>
            <documentation>
                <html:p>
                    A datetime in which the timezone is explicitly
                    required and must be +00:00 or Z.
                </html:p>
                <html:p>
                    <html:strong>
                        Only an XSD 1.1 validator will enforce this restriction.
                    </html:strong>
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:dateTime" vc:minVersion="1.0" vc:maxVersion="1.1"/>
        <restriction base="xsd:dateTimeStamp" vc:minVersion="1.1">
            <assertion
                test="ends-with(string($value),'Z') or ends-with(string($value),'+00:00') or ends-with(string($value),'-00:00')"
                xerces:message="The dateTime should be in the UTC timezone, it is expect to end in +00:00 or Z."
                saxon:message="The dateTime should be in the UTC timezone, it is expect to end in +00:00 or Z."/>
        </restriction>
    </simpleType>

    <simpleType name="EventType">
        <annotation>
            <documentation>
                <html:p>
                    The type of event.
                </html:p>
            </documentation>
        </annotation>
        <restriction base="xsd:string">
            <enumeration value="CREATE"/>
            <enumeration value="USAGE"/>
            <enumeration value="UPDATE"/>
            <enumeration value="DELETE"/>
            <enumeration value="SUSPEND"/>
            <enumeration value="UNSUSPEND"/>
            <enumeration value="EXTENDED"/>
        </restriction>
    </simpleType>
</schema>
